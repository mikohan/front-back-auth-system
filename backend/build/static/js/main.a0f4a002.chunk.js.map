{"version":3,"sources":["reportWebVitals.ts","containers/Home.tsx","store/users/userActionTypes.ts","store/users/userAction.ts","containers/Activate.tsx","containers/Login.tsx","containers/ResetPassword.tsx","containers/ResetPasswordConfirm.tsx","containers/SignUp.tsx","components/Navbar.tsx","hoc/Layout.tsx","store/users/userReducer.ts","store/store.ts","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Home","props","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","USER_AUTHENTICATED_SUCCESS","USER_AUTHENTICATED_FAIL","USER_PASSWORD_RESET_SUCCESS","USER_PASSWORD_RESET_FAIL","USER_PASSWORD_RESET_CONFIRM_SUCCESS","USER_PASSWORD_RESET_CONFIRM_FAIL","USER_LOGOUT","USER_SIGN_UP_SUCCESS","USER_SIGN_UP_FAIL","USER_ACTIVATION_SUCCESS","USER_ACTIVATION_FAIL","USER_GOOGLE_LOGIN_SUCCESS","USER_GOOGLE_LOGIN_FAIL","loadUser","dispatch","a","token","JSON","parse","localStorage","getItem","e","console","log","config","headers","Authorization","Accept","url","process","axios","get","res","type","payload","data","useStyles","makeStyles","theme","createStyles","title","padding","spacing","textField","bottom","marginRight","marginLeft","Activate","match","classes","React","useState","requestSent","setRequestSent","useDispatch","params","uid","to","Container","maxWidth","Grid","container","className","item","xs","Typography","variant","Button","color","onClick","body","post","verify","Login","isAuthenticated","useSelector","state","user","email","password","formData","setFormData","onChange","target","name","value","authorization_url","window","location","replace","TextField","defaultValue","placeholder","label","fullWidth","required","ResetPassword","setEmail","event","resetPassword","ResetPasswordConfirm","setPassword","new_password","resetPasswordConfirm","error","setError","accountCreated","setAccountCreated","root","flexGrow","textDecoration","menuButton","ButtonAppBar","handleLogout","GuestLinks","AuthLinks","AppBar","position","Toolbar","IconButton","edge","aria-label","Box","connect","checkAuthenticated","code","googleLogin","details","formBody","Object","keys","map","key","encodeURIComponent","join","useLocation","useEffect","values","queryString","search","children","initialState","access","refresh","rootReducer","combineReducers","action","setItem","stringify","removeItem","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","App","exact","path","component","SignUp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0f4a002.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { ReactElement } from 'react';\n\nexport interface HomeProps {}\n\nexport default function Home(props: HomeProps): ReactElement | null {\n  return <h1>Home Component</h1>;\n}\n","import { IJwt, IUser } from '../../intefaces';\n\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\nexport const USER_AUTHENTICATED_SUCCESS = 'USER_AUTHENTICATED_SUCCESS';\nexport const USER_AUTHENTICATED_FAIL = 'USER_AUTHENTICATED_FAIL';\nexport const USER_PASSWORD_RESET_SUCCESS = 'USER_PASSWORD_RESET_SUCCESS';\nexport const USER_PASSWORD_RESET_FAIL = 'USER_PASSWORD_RESET_FAIL';\nexport const USER_PASSWORD_RESET_CONFIRM_SUCCESS =\n  'USER_PASSWORD_RESET_CONFIRM_SUCCESS';\nexport const USER_PASSWORD_RESET_CONFIRM_FAIL =\n  'USER_PASSWORD_RESET_CONFIRM_FAIL';\nexport const USER_LOGOUT = 'USER_LOGOUT';\nexport const USER_SIGN_UP_SUCCESS = 'USER_SIGN_UP_SUCCESS';\nexport const USER_SIGN_UP_FAIL = 'USER_SIGN_UP_FAIL';\nexport const USER_ACTIVATION_SUCCESS = 'USER_ACTIVATION_SUCCESS';\nexport const USER_ACTIVATION_FAIL = 'USER_ACTIVATION_FAIL';\nexport const USER_GOOGLE_LOGIN_SUCCESS = 'USER_GOOGLE_LOGIN_SUCCESS';\nexport const USER_GOOGLE_LOGIN_FAIL = 'USER_GOOGLE_LOGIN_FAIL';\n\nexport interface IUserLogin {\n  type: typeof USER_LOGIN_SUCCESS | typeof USER_LOGIN_FAIL;\n  payload: IJwt | null;\n}\nexport interface IUserFetchAction {\n  type: typeof USER_LOADED_SUCCESS | typeof USER_LOADED_FAIL;\n  payload: IUser | null;\n}\n\nexport interface ILogout {\n  type: typeof USER_LOGOUT;\n}\n\nexport interface IUserAuthenticatedCheckAction {\n  type: typeof USER_AUTHENTICATED_SUCCESS | typeof USER_AUTHENTICATED_FAIL;\n  payload?: boolean;\n}\n\nexport interface IUserResetPasswordAction {\n  type: typeof USER_PASSWORD_RESET_SUCCESS | typeof USER_PASSWORD_RESET_FAIL;\n}\nexport interface IUserResetPasswordConfirmAction {\n  type:\n    | typeof USER_PASSWORD_RESET_CONFIRM_SUCCESS\n    | typeof USER_PASSWORD_RESET_CONFIRM_FAIL;\n}\n\nexport interface IUserSignUpAction {\n  type: typeof USER_SIGN_UP_SUCCESS | typeof USER_SIGN_UP_FAIL;\n  payload: boolean | null;\n}\nexport interface IUserActivationAction {\n  type: typeof USER_ACTIVATION_SUCCESS | typeof USER_ACTIVATION_FAIL;\n}\n\nexport interface IGoogleLoginAction {\n  type: typeof USER_GOOGLE_LOGIN_SUCCESS | typeof USER_GOOGLE_LOGIN_FAIL;\n  payload: IJwt | null;\n}\n\nexport type IUserAction =\n  | IUserLogin\n  | IUserFetchAction\n  | ILogout\n  | IUserAuthenticatedCheckAction\n  | IUserResetPasswordAction\n  | IUserResetPasswordConfirmAction\n  | IUserSignUpAction\n  | IUserActivationAction\n  | IGoogleLoginAction;\n","import { ThunkDispatch } from 'redux-thunk';\nimport axios from 'axios';\nimport { IState } from '../../intefaces';\n\nimport {\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL,\n  IUserAction,\n  USER_AUTHENTICATED_SUCCESS,\n  USER_AUTHENTICATED_FAIL,\n  USER_LOGOUT,\n  USER_PASSWORD_RESET_SUCCESS,\n  USER_PASSWORD_RESET_FAIL,\n  USER_PASSWORD_RESET_CONFIRM_SUCCESS,\n  USER_PASSWORD_RESET_CONFIRM_FAIL,\n  USER_SIGN_UP_SUCCESS,\n  USER_SIGN_UP_FAIL,\n  USER_ACTIVATION_SUCCESS,\n  USER_ACTIVATION_FAIL,\n  USER_GOOGLE_LOGIN_SUCCESS,\n  USER_GOOGLE_LOGIN_FAIL,\n} from './userActionTypes';\n\nexport const checkAuthenticated = () => async (\n  dispatch: ThunkDispatch<IState, void, IUserAction>\n) => {\n  let token: string | null = null;\n  try {\n    token = JSON.parse(localStorage.getItem('access') as string);\n  } catch (e) {\n    console.log('Cant get tocken from localstorage', e);\n  }\n\n  if (localStorage.getItem('access')) {\n    try {\n      const url = `${process.env.REACT_APP_API_URL}/auth/jwt/verify/`;\n      const body = { token: token };\n      const res = await axios.post(url, body);\n      if (res.data.code !== 'token_not_valid') {\n        dispatch({\n          type: USER_AUTHENTICATED_SUCCESS,\n        });\n      } else {\n        dispatch({\n          type: USER_AUTHENTICATED_FAIL,\n        });\n      }\n    } catch (e) {\n      dispatch({\n        type: USER_AUTHENTICATED_FAIL,\n      });\n    }\n  } else {\n    dispatch({\n      type: USER_AUTHENTICATED_FAIL,\n    });\n  }\n};\n\nexport const loadUser = () => async (\n  dispatch: ThunkDispatch<IState, void, IUserAction>\n) => {\n  let token = null;\n  try {\n    token = JSON.parse(localStorage.getItem('access') as string);\n  } catch (e) {\n    console.log('Cannot get token from localstorage', e);\n  }\n\n  if (token) {\n    const config = {\n      headers: {\n        Authorization: `JWT ${token}`,\n        Accept: 'application/json',\n      },\n    };\n    try {\n      const url = `${process.env.REACT_APP_API_URL}/auth/users/me/`;\n      const res = await axios.get(url, config);\n      dispatch({\n        type: USER_LOADED_SUCCESS,\n        payload: res.data,\n      });\n    } catch (e) {\n      console.log('Cant Load User on line 40 userActions in store ', e);\n      dispatch({\n        type: USER_LOADED_FAIL,\n        payload: null,\n      });\n    }\n  } else {\n    dispatch({\n      type: USER_LOADED_FAIL,\n      payload: null,\n    });\n  }\n};\n\n// USER login\n\nexport const login = (email: string, password: string) => async (\n  dispatch: ThunkDispatch<IState, void, IUserAction>\n) => {\n  const body = { email, password };\n  const url = `${process.env.REACT_APP_API_URL}/auth/jwt/create/`;\n  try {\n    const res = await axios.post(url, body);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(loadUser() as any);\n  } catch (e) {\n    console.log('Cant create token in actions 21 line', e);\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: null,\n    });\n  }\n};\n// Google user login\nexport const googleLogin = (state: string, code: string) => async (\n  dispatch: ThunkDispatch<IState, void, IUserAction>\n) => {\n  if (state && code && !localStorage.getItem('access')) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    };\n    const details: { [key: string]: string } = {\n      state: state,\n      code: code,\n    };\n\n    const formBody = Object.keys(details)\n      .map(\n        (key) =>\n          encodeURIComponent(key) + '=' + encodeURIComponent(details[key])\n      )\n      .join('&');\n    console.log('IN', formBody);\n    const url = `${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?${formBody}`;\n    try {\n      const res = await axios.post(url, config);\n      console.log(res);\n      dispatch({\n        type: USER_GOOGLE_LOGIN_SUCCESS,\n        payload: res.data,\n      });\n      dispatch(loadUser() as any);\n    } catch (e) {\n      dispatch({\n        type: USER_GOOGLE_LOGIN_FAIL,\n        payload: null,\n      });\n      console.log('Error in googel authentication action', e);\n    }\n  }\n};\n\n// USER sign up\n\nexport const signup = (email: string, password: string) => async (\n  dispatch: ThunkDispatch<IState, void, IUserAction>\n) => {\n  const body = { email, password };\n  const url = `${process.env.REACT_APP_API_URL}/auth/users/`;\n  try {\n    const res = await axios.post(url, body);\n    dispatch({\n      type: USER_SIGN_UP_SUCCESS,\n      payload: res.data,\n    });\n  } catch (e) {\n    console.log('Cant create token in actions 21 line', e);\n    dispatch({\n      type: USER_SIGN_UP_FAIL,\n      payload: null,\n    });\n  }\n};\n// User activation\n\nexport const verify = (uid: string, token: string) => async (\n  dispatch: ThunkDispatch<IState, void, IUserAction>\n) => {\n  const body = { uid, token };\n  const url = `${process.env.REACT_APP_API_URL}/auth/users/activation/`;\n  try {\n    const res = await axios.post(url, body);\n    dispatch({\n      type: USER_ACTIVATION_SUCCESS,\n      payload: res.data,\n    });\n  } catch (e) {\n    console.log('Cant create token in actions 21 line', e);\n    dispatch({\n      type: USER_ACTIVATION_FAIL,\n      payload: null,\n    });\n  }\n};\n\nexport const logout = () => (\n  dispatch: ThunkDispatch<IState, void, IUserAction>\n) => {\n  dispatch({\n    type: USER_LOGOUT,\n  });\n};\n\nexport const resetPassword = (email: string) => async (\n  dispatch: ThunkDispatch<IState, void, IUserAction>\n) => {\n  const body = { email };\n  const url = `${process.env.REACT_APP_API_URL}/auth/users/reset_password/`;\n  try {\n    await axios.post(url, body);\n    dispatch({\n      type: USER_PASSWORD_RESET_SUCCESS,\n    });\n  } catch (e) {\n    console.log('Cannot call api reset password', e);\n    dispatch({\n      type: USER_PASSWORD_RESET_FAIL,\n    });\n  }\n};\n\nexport const resetPasswordConfirm = (\n  uid: string,\n  token: string,\n  password: string\n) => async (dispatch: ThunkDispatch<IState, void, IUserAction>) => {\n  const body = { uid, token, new_password: password };\n  console.log(body);\n  const url = `${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`;\n  console.log(url);\n  try {\n    await axios.post(url, body);\n    dispatch({\n      type: USER_PASSWORD_RESET_CONFIRM_SUCCESS,\n    });\n  } catch (e) {\n    console.log('Cannot call api reset password', e);\n    dispatch({\n      type: USER_PASSWORD_RESET_CONFIRM_FAIL,\n      payload: null,\n    });\n  }\n};\n","import React, { ReactElement } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Typography, Grid, Container, Button } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { verify } from '../store/users/userAction';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      padding: theme.spacing(5),\n    },\n    textField: {\n      padding: theme.spacing(5),\n    },\n    bottom: {\n      padding: theme.spacing(5),\n      '&>span': {\n        marginRight: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n      },\n    },\n  })\n);\nexport interface ResetPasswordProps {\n  match: {\n    params: {\n      uid: string;\n      token: string;\n    };\n  };\n}\n\nexport default function Activate({\n  match,\n}: ResetPasswordProps): ReactElement | null {\n  const classes = useStyles();\n  const [requestSent, setRequestSent] = React.useState(false);\n  const dispatch = useDispatch();\n  const { uid, token } = match.params;\n\n  function onSubmit() {\n    if (uid && token) {\n      dispatch(verify(uid, token));\n      setRequestSent(true);\n    }\n  }\n  if (requestSent) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid container>\n        <Grid className={classes.title} item xs={12}>\n          <Typography variant=\"h5\">Activate your account</Typography>\n        </Grid>\n        <Grid className={classes.textField} item xs={12}>\n          <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\n            Activate Account\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import React, { ReactElement, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n  Typography,\n  Grid,\n  Container,\n  TextField,\n  Button,\n} from '@material-ui/core';\nimport { login } from '../store/users/userAction';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IState } from '../intefaces';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      padding: theme.spacing(5),\n    },\n    textField: {\n      padding: theme.spacing(5),\n    },\n    bottom: {\n      padding: theme.spacing(5),\n      '&>span': {\n        marginRight: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n      },\n    },\n  })\n);\nexport interface LoginProps {}\nexport interface ILogin {\n  email: string;\n  password: string;\n}\n\nexport default function Login(): ReactElement | null {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(\n    (state: IState) => state.user.isAuthenticated\n  );\n\n  const [formData, setFormData] = useState<ILogin>({\n    email: '',\n    password: '',\n  });\n\n  function onChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  }\n  function onSubmit() {\n    // login(emal, password)\n    dispatch(login(formData.email, formData.password));\n  }\n\n  // is the user authenticated\n  // Redirect to home page\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  async function onGoogle() {\n    try {\n      const url = `${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=${process.env.REACT_APP_API_URL}/google`;\n      // const url = `${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=${process.env.REACT_APP_SELF_URL}/google`;\n      const res = await axios.get(url);\n      console.log(res.data.authorization_url);\n      if (typeof window !== 'undefined') {\n        window.location.replace(res.data.authorization_url);\n      }\n    } catch (e) {\n      console.log('Continue with google fail', e);\n    }\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid container>\n        <Grid className={classes.title} item xs={12}>\n          <Typography variant=\"h5\">Sign In to account</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Grid className={classes.textField} item xs={12}>\n            <TextField\n              name=\"email\"\n              defaultValue=\"\"\n              variant=\"outlined\"\n              placeholder=\"Email\"\n              label=\"email\"\n              type=\"email\"\n              fullWidth\n              required\n              onChange={onChange}\n            />\n          </Grid>\n          <Grid className={classes.textField} item xs={12}>\n            <TextField\n              name=\"password\"\n              defaultValue=\"\"\n              variant=\"outlined\"\n              placeholder=\"Password\"\n              label=\"password\"\n              type=\"password\"\n              fullWidth\n              required\n              onChange={onChange}\n            />\n          </Grid>\n          <Grid className={classes.textField} item xs={12}>\n            <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\n              Submit\n            </Button>\n          </Grid>\n          <Grid className={classes.bottom} item xs={12}>\n            <span>\n              Don't have an accout? <Link to=\"/signup\">SignUp</Link>\n            </span>\n            <span>\n              Forgot your password?{' '}\n              <Link to=\"/reset-password\">Reset Password</Link>\n            </span>\n          </Grid>\n          <Grid className={classes.textField} item xs={12}>\n            <Button variant=\"contained\" color=\"secondary\" onClick={onGoogle}>\n              Continue with Google\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n  Typography,\n  Grid,\n  Container,\n  TextField,\n  Button,\n} from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { resetPassword, resetPasswordConfirm } from '../store/users/userAction';\nimport { Redirect } from 'react-router';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      padding: theme.spacing(5),\n    },\n    textField: {\n      padding: theme.spacing(5),\n    },\n    bottom: {\n      padding: theme.spacing(5),\n      '&>span': {\n        marginRight: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n      },\n    },\n  })\n);\nexport interface ResetPasswordProps {}\n\nexport default function ResetPassword(): ReactElement | null {\n  const classes = useStyles();\n  const [requestSent, setRequestSent] = React.useState(false);\n  const [email, setEmail] = React.useState('');\n  const dispatch = useDispatch();\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setEmail(event.target.value);\n  }\n\n  function onSubmit() {\n    if (email) {\n      dispatch(resetPassword(email));\n      setRequestSent(true);\n    }\n  }\n  if (requestSent) {\n    setRequestSent(false);\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid container>\n        <Grid className={classes.title} item xs={12}>\n          <Typography variant=\"h5\">Password Reset Page</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Grid className={classes.textField} item xs={12}>\n            <TextField\n              name=\"email\"\n              defaultValue=\"\"\n              variant=\"outlined\"\n              placeholder=\"Email\"\n              label=\"email\"\n              type=\"email\"\n              fullWidth\n              required\n              onChange={onChange}\n            />\n          </Grid>\n          <Grid className={classes.textField} item xs={12}>\n            <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\n              Reset Password\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n  Typography,\n  Grid,\n  Container,\n  TextField,\n  Button,\n} from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { resetPasswordConfirm } from '../store/users/userAction';\nimport { Redirect } from 'react-router';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      padding: theme.spacing(5),\n    },\n    textField: {\n      padding: theme.spacing(5),\n    },\n    bottom: {\n      padding: theme.spacing(5),\n      '&>span': {\n        marginRight: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n      },\n    },\n  })\n);\nexport interface ResetPasswordProps {\n  match: {\n    params: {\n      uid: string;\n      token: string;\n    };\n  };\n}\n\nexport default function ResetPasswordConfirm({\n  match,\n}: ResetPasswordProps): ReactElement | null {\n  const classes = useStyles();\n  const [requestSent, setRequestSent] = React.useState(false);\n  const [password, setPassword] = React.useState('');\n  const dispatch = useDispatch();\n  const { uid, token } = match.params;\n\n  function onChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setPassword(event.target.value);\n  }\n\n  function onSubmit() {\n    if (password) {\n      dispatch(resetPasswordConfirm(uid, token, password));\n      setRequestSent(true);\n    }\n  }\n  if (requestSent) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid container>\n        <Grid className={classes.title} item xs={12}>\n          <Typography variant=\"h5\">Enter your new password</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Grid className={classes.textField} item xs={12}>\n            <TextField\n              name=\"password\"\n              defaultValue=\"\"\n              variant=\"outlined\"\n              placeholder=\"Email\"\n              label=\"password\"\n              type=\"password\"\n              fullWidth\n              required\n              onChange={onChange}\n            />\n          </Grid>\n          <Grid className={classes.textField} item xs={12}>\n            <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\n              Reset Password\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import React, { ReactElement, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport {\n  Typography,\n  Grid,\n  Container,\n  TextField,\n  Button,\n} from '@material-ui/core';\nimport { signup } from '../store/users/userAction';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IState } from '../intefaces';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      padding: theme.spacing(5),\n    },\n    textField: {\n      padding: theme.spacing(5),\n    },\n    bottom: {\n      padding: theme.spacing(5),\n      '&>span': {\n        marginRight: theme.spacing(1),\n        marginLeft: theme.spacing(1),\n      },\n    },\n  })\n);\nexport interface LoginProps {}\nexport interface ILogin {\n  email: string;\n  password: string;\n}\n\nexport default function Login(): ReactElement | null {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [error, setError] = useState<string | null>(null);\n  const [accountCreated, setAccountCreated] = useState<boolean>(false);\n  const isAuthenticated = useSelector(\n    (state: IState) => state.user.isAuthenticated\n  );\n\n  const [formData, setFormData] = useState<ILogin>({\n    email: '',\n    password: '',\n  });\n\n  function onChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  }\n  function onSubmit() {\n    // login(emal, password)\n    if ((formData.email, formData.password)) {\n      dispatch(signup(formData.email, formData.password));\n      setAccountCreated(true);\n    } else {\n      setError('Email and password cannot be empty');\n    }\n  }\n\n  // is the user authenticated\n  // Redirect to home page\n  if (isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n  if (accountCreated) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Grid container>\n        <Grid className={classes.title} item xs={12}>\n          <Typography variant=\"h5\">Make account</Typography>\n        </Grid>\n        {error && (\n          <Grid className={classes.title} item xs={12}>\n            <Typography variant=\"h5\">{error}</Typography>\n          </Grid>\n        )}\n        <Grid item xs={6}>\n          <Grid className={classes.textField} item xs={12}>\n            <TextField\n              name=\"email\"\n              defaultValue=\"\"\n              variant=\"outlined\"\n              placeholder=\"Email\"\n              label=\"email\"\n              type=\"email\"\n              fullWidth\n              required\n              onChange={onChange}\n            />\n          </Grid>\n          <Grid className={classes.textField} item xs={12}>\n            <TextField\n              name=\"password\"\n              defaultValue=\"\"\n              variant=\"outlined\"\n              placeholder=\"Password\"\n              label=\"password\"\n              type=\"password\"\n              fullWidth\n              required\n              onChange={onChange}\n            />\n          </Grid>\n          <Grid className={classes.textField} item xs={12}>\n            <Button variant=\"contained\" color=\"primary\" onClick={onSubmit}>\n              Submit\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n","import { Fragment } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link } from 'react-router-dom';\nimport { logout } from '../store/users/userAction';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IState, IUser } from '../intefaces';\nimport { Box } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      '& a': {\n        textDecoration: 'none',\n        color: 'inherit',\n      },\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  })\n);\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const user = useSelector((state: IState) => state.user.user);\n  const isAuthenticated = useSelector(\n    (state: IState) => state.user.isAuthenticated\n  );\n\n  function handleLogout() {\n    dispatch(logout());\n  }\n\n  const GuestLinks = () => (\n    <Fragment>\n      <Button color=\"inherit\">\n        <Link to=\"/login\">Login</Link>\n      </Button>\n      <Button color=\"inherit\">\n        <Link to=\"/signup\">SignUp</Link>\n      </Button>\n    </Fragment>\n  );\n  interface IAuthLinksProps {\n    user: IUser | null;\n  }\n  const AuthLinks = ({ user }: IAuthLinksProps) => (\n    <Fragment>\n      <Button color=\"inherit\">{user?.email}</Button>\n      <Button color=\"inherit\" onClick={handleLogout}>\n        Logout\n      </Button>\n    </Fragment>\n  );\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            <Link to=\"/\">Home</Link>\n          </Typography>\n          <Box>\n            {isAuthenticated ? <AuthLinks user={user} /> : <GuestLinks />}\n          </Box>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { ReactElement, useEffect } from 'react';\nimport Navbar from '../components/Navbar';\nimport { useLocation } from 'react-router-dom';\nimport {\n  checkAuthenticated,\n  loadUser,\n  googleLogin,\n} from '../store/users/userAction';\nimport { connect } from 'react-redux';\nimport { IState } from '../intefaces';\nimport queryString from 'query-string';\n\nexport interface Props {\n  children: ReactElement;\n  checkAuthenticated(): void;\n  loadUser(): void;\n  isAuthenticated: boolean;\n  googleLogin(state: string, code: string): void;\n}\n\nfunction Layout(props: Props): ReactElement | null {\n  let location = useLocation();\n\n  useEffect(() => {\n    const values = queryString.parse(location.search);\n    const state = values.state ? (values.state as string) : null;\n    const code = values.code ? (values.code as string) : null;\n    if (state && code) {\n      props.googleLogin(state, code);\n    }\n    console.log(state, code, 'In layout state code');\n    try {\n      const ls = localStorage.getItem('access');\n      if (ls) {\n        if (!props.isAuthenticated) {\n          props.checkAuthenticated();\n        }\n        if (props.isAuthenticated) {\n          props.loadUser();\n        }\n      }\n    } catch (e) {}\n  }, [location, props]);\n\n  return (\n    <div>\n      <Navbar />\n      {props.children}\n    </div>\n  );\n}\nconst mapStateToProps = (state: IState) => ({\n  isAuthenticated: state.user.isAuthenticated,\n});\nexport default connect(mapStateToProps, {\n  checkAuthenticated,\n  loadUser,\n  googleLogin,\n})(Layout);\n","import {\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOADED_SUCCESS,\n  USER_LOADED_FAIL,\n  USER_AUTHENTICATED_SUCCESS,\n  USER_AUTHENTICATED_FAIL,\n  USER_LOGOUT,\n  USER_PASSWORD_RESET_SUCCESS,\n  USER_PASSWORD_RESET_FAIL,\n  USER_PASSWORD_RESET_CONFIRM_SUCCESS,\n  USER_PASSWORD_RESET_CONFIRM_FAIL,\n  USER_SIGN_UP_SUCCESS,\n  USER_SIGN_UP_FAIL,\n  USER_ACTIVATION_SUCCESS,\n  USER_ACTIVATION_FAIL,\n  IUserAction,\n  USER_GOOGLE_LOGIN_SUCCESS,\n  USER_GOOGLE_LOGIN_FAIL,\n} from './userActionTypes';\nimport { IUserState } from '../../intefaces';\n\nconst initialState: IUserState = {\n  access: localStorage.getItem('access') || null,\n  refresh: localStorage.getItem('refresh') || null,\n  isAuthenticated: false,\n  user: null,\n};\n\nexport const userReducer = (\n  state: IUserState = initialState,\n  action: IUserAction\n) => {\n  switch (action.type) {\n    case USER_AUTHENTICATED_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n      };\n    case USER_AUTHENTICATED_FAIL:\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n    case USER_SIGN_UP_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: false,\n      };\n\n    case USER_LOGIN_SUCCESS:\n      localStorage.setItem('access', JSON.stringify(action.payload?.access!));\n      return {\n        ...state,\n        isAuthenticated: true,\n        access: action.payload?.access,\n        refresh: action.payload?.refresh,\n      };\n    case USER_LOADED_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    case USER_LOADED_FAIL:\n      return {\n        ...state,\n        user: null,\n      };\n    case USER_GOOGLE_LOGIN_SUCCESS:\n      return {\n        ...state,\n        isAuthenticated: true,\n        access: action.payload?.access,\n        refresh: action.payload?.refresh,\n      };\n    case USER_LOGOUT:\n    case USER_GOOGLE_LOGIN_FAIL:\n    case USER_LOGIN_FAIL:\n    case USER_SIGN_UP_FAIL:\n      localStorage.removeItem('access');\n      localStorage.removeItem('refresh');\n      return {\n        ...state,\n        isAuthenticated: false,\n        access: null,\n        refresh: null,\n        user: null,\n      };\n    case USER_PASSWORD_RESET_SUCCESS:\n    case USER_PASSWORD_RESET_FAIL:\n    case USER_PASSWORD_RESET_CONFIRM_SUCCESS:\n    case USER_PASSWORD_RESET_CONFIRM_FAIL:\n    case USER_ACTIVATION_SUCCESS:\n    case USER_ACTIVATION_FAIL:\n      return {\n        ...state,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { combineReducers } from 'redux';\nimport { userReducer } from './users/userReducer';\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n});\n\nexport interface IState {}\n\nconst middleware = [thunk];\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import Home from './containers/Home';\nimport Activate from './containers/Activate';\nimport Login from './containers/Login';\nimport ResetPassword from './containers/ResetPassword';\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\nimport SignUp from './containers/SignUp';\nimport Layout from './hoc/Layout';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/signup\" component={SignUp} />\n          <Route exact path=\"/reset-password\" component={ResetPassword} />\n          <Route\n            exact\n            path=\"/password/confirm/:uid/:token\"\n            component={ResetPasswordConfirm}\n          />\n          <Route exact path=\"/activate/:uid/:token\" component={Activate} />\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n      </Layout>\n    </Router>\n  </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}